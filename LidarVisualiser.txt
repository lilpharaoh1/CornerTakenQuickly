# Visualiser imports
import pygame,sys
from LidarVis import *


# Lidar Visualiation Code, insert outside of the while loop
pygame.init()
clock = pygame.time.Clock()
WIDTH, HEIGHT = 600, 600
WINDOW_SIZE = (WIDTH, HEIGHT)
dis = pygame.display.set_mode(WINDOW_SIZE)
pygame.display.set_caption('Lidar Visualisation')
running  = True


#Insert this is testing multiagent racing
if i == 0:
    proc_ranges, obstacle_range, best_point, best_speed = driver.get_visualiser_ranges()

#Lidar Visulaiser Code, insert in the while loop of the main.py file
for event in pygame.event.get():
    if event.type == pygame.QUIT:
        pygame.quit()
        sys.exit()
dis.fill((0, 200, 0))
car_width, car_height = 14, 20
start_pos = (dis.get_width() / 2, (dis.get_height() / 2) - (car_height /2)+150)

for num, distance in enumerate(proc_ranges):
    end_pos = calc_end_pos(start_pos, distance, num)
    if num < 135 or num > 945:
        pygame.draw.line(dis, (155, 155, 155), start_pos, end_pos, 1)
    else:
        pygame.draw.line(dis, (255, 255, 255), start_pos, end_pos, 1)
if len(proc_ranges) > 0:
    pygame.draw.line(dis, (0, 0, 255), start_pos, calc_end_pos(start_pos, best_speed, 135 + best_point), 5)
pygame.draw.rect(dis, (255, 0, 0), pygame.Rect((dis.get_width() / 2) - (car_width / 2), (dis.get_height() / 2) - (car_height / 2) + 150, car_width, car_height))
pygame.draw.circle(dis, (100, 100, 100), start_pos, 30, 2)
pygame.draw.circle(dis, (150, 150, 150), start_pos, 50, 2)
pygame.display.update()
